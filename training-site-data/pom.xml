<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.springguru</groupId>
    <artifactId>training-site</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>training-site-data</artifactId>
  <name>training-site-data</name>
  <description>This is the data module</description>
  
  <!-- this is a module project that does not contain a main class, because it's not a spring boot
 application, it's used as a dependency for another module,
 so, when we buid this module, maven will consider it as an executable jar, and try to repackage it,
 and this will generate an error, that is not finding the main class,
 this is why we are using this property, we want just a simple jar with classes
  so we can use it as a dependency for the pet-clinic-web --> 
  <properties>
      <spring-boot.repackage.skip>true</spring-boot.repackage.skip>
  </properties>
  
  <dependencies>
    <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
	</dependency>
	<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
	</dependency>
	<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
	</dependency>
  </dependencies>
</project>